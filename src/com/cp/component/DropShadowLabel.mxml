<?xml version="1.0" encoding="utf-8"?>
<s:Label xmlns:fx="http://ns.adobe.com/mxml/2009"
         xmlns:mx="library://ns.adobe.com/flex/mx"
         xmlns:s="library://ns.adobe.com/flex/spark"
		 lineBreak="toFit"
		 showTruncationTip="true"
		 >

    <fx:Metadata>
        <![CDATA[ 
		[Style(name="blur",type="Number",format="Length",inherit="yes")] 
		[Style(name="distance",type="Number",format="Pixels",inherit="yes")] 
		[Style(name="quality",type="uint",format="BitmapFilterQuality",inherit="yes")] 
		[Style(name="textDropShadowAlpha",type="Number",format="0-1",inherit="yes")]
		[Style(name="textDropShadowAngle",type="Number",format="Degrees",inherit="yes")] 
		[Style(name="textDropShadowColor",type="uint",format="Color",inherit="yes")] 
		]]>
    </fx:Metadata>

    <fx:Script>
        <![CDATA[
            override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
            {
                // set default values
                if (getStyle('blur') == null)
                {
                    dropShadow.blurX = 0;
                    dropShadow.blurY = 0;
                }

                if (getStyle('distance') == null)
                    dropShadow.distance = 1;

                if (getStyle('quality') == null)
                    dropShadow.quality = 2;

                if (getStyle('distance') == null)
                    dropShadow.distance = 1;

                if (getStyle('textDropShadowAlpha') == null)
                    dropShadow.alpha = 1;

                if (getStyle('textDropShadowAngle') == null)
                    dropShadow.angle = 270;

                if (getStyle('textDropShadowColor') == null)
                    dropShadow.color = 0xffffff;

                super.updateDisplayList(unscaledWidth, unscaledHeight);
            }
        ]]>
    </fx:Script>

    <s:filters>
        <s:DropShadowFilter id="dropShadow"
                            alpha="{getStyle('textDropShadowAlpha')}"
                            angle="{getStyle('textDropShadowAngle')}"
                            blurX="{getStyle('blur')}"
                            blurY="{getStyle('blur')}"
                            color="{getStyle('textDropShadowColor')}"
                            distance="{getStyle('distance')}"
                            quality="{getStyle('quality')}" />
    </s:filters>
</s:Label>
